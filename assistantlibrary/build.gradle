/* ************************************************************************************************
 * Copyright 2018 Qualcomm Technologies International, Ltd.                                       *
 **************************************************************************************************/

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    def version = getVersion()

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 26
        versionCode getVersionCode(version)
        versionName getVersionName(version)

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86','x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // modules
    compile project(':GaiaLibrary')

    // components
    compile 'com.android.support:appcompat-v7:26.1.0'
}

def getVersion() {
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        def FileInputStream file = new FileInputStream(versionPropsFile)
        versionProps.load(file)
        file.close()
        return versionProps
    } else {
        throw new GradleException("getVersion(): could not read version.properties!")
    }
}

/**
 * <p>Get the version code number from the given properties.</p>
 *
 * @param version
 *          The properties information coming from the version.properties file which shall contain values for the
 *          following key: VERSION_CODE.
 *
 *
 * @return An integer get from the properties.
 */
static def int getVersionCode(Properties version) {
    return version['VERSION_CODE'].toInteger()
}

/**
 * <p>Build the version name for the application based on the version values from the version.properties file.<br/>
 * The version code is as follows: "<code>a.b.c #d</code>" with:</p>
 * <ul>
 *     <li>a as the VERSION_MAJOR</li>
 *     <li>b as the VERSION_MINOR</li>
 *     <li>c as the VERSION_REVISION</li>
 *     <li>d as the VERSION_BUILD</li>
 * </ul>
 *
 * @param version
 *          The properties information coming from the version.properties file which shall contain values for the
 *          following keys: VERSION_MAJOR, VERSION_MINOR, VERSION_REVISION and VERSION_NUMBER.
 *
 * @return A String built using the format "a.b.c build d" from the version numbers.
 */
static def String getVersionName(Properties version) {
    return version['VERSION_MAJOR'] + "." + version['VERSION_MINOR'] + "." + version['VERSION_REVISION'] +
            "." + version['VERSION_CODE'];
}
